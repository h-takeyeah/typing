openapi: 3.0.0
info:
  title: Typing API
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: ローカル開発環境
  - url: https://typemaster.com
    description: 本番環境
paths:
  /users:
    get:
      summary: ユーザー情報を取得
      parameters:
        - in: query
          name: student_number
          schema:
            type: string
          description: 学生番号
          required: true
      responses:
        "200":
          description: ユーザー情報を返します。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: ユーザーが見つかりません。

  /scores/ranking:
    get:
      summary: スコアランキングを取得
      parameters:
        - in: query
          name: sort_by
          schema:
            type: string
            enum: [keystrokes, accuracy]
          description: ソート対象のカラム
        - in: query
          name: start
          schema:
            type: integer
          description: ランキングの開始位置
      responses:
        "200":
          description: スコアランキングを返します。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ScoreRanking"
        "400":
          description: 不正なリクエストです。

  /scores:
    post:
      summary: スコアを登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  format: uuid
                keystrokes:
                  type: integer
                accuracy:
                  type: number
                  format: float
              required:
                - user_id
                - keystrokes
                - accuracy
      responses:
        "201":
          description: スコアが正常に登録されました。
        "400":
          description: 不正なリクエストです。

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        student_number:
          type: string
        handle_name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Score:
      type: object
      properties:
        id:
          type: string
        keystrokes:
          type: integer
        accuracy:
          type: number
          format: float
        created_at:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/User"

    ScoreRanking:
      type: object
      properties:
        rank:
          type: integer
        score:
          $ref: "#/components/schemas/Score"
